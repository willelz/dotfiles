[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'lifepillar/vim-solarized8'

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'arcticicestudio/nord-vim'

[[plugins]]
repo = 'mhartington/oceanic-next'

[[plugins]]
repo = 'nvim-lua/popup.nvim'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'nvim-lua/telescope.nvim'
hook_add = '''
nnoremap <Leader>g <cmd>lua require('telescope.builtin').git_files{}<CR>
nnoremap <Leader>f <cmd>lua require('telescope.builtin').find_files{}<CR>
'''

[[plugins]]
repo = 'tjdevries/nlua.nvim'
hook_add = '''
lua require('nlua.lsp.nvim').setup(require('nvim_lsp'), {})
'''

[[plugins]]
repo = 'neovim/nvim-lspconfig'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'Shougo/deoplete-lsp'

[[plugins]]
repo = 'tbodt/deoplete-tabnine'
build = 'bash ./install.sh'


[[plugins]]
repo = 'willelz/vim-flat-yank'
hook_add = '''
vnoremap <Leader>y :<C-u>FlatYank +<CR>
'''

[[plugins]]
repo = 'machakann/vim-sandwich'
hook_add = '''
nmap s <Nop>
xmap s <Nop>

let g:sandwich_no_initex_ftplugin = 1
let g:sandwich_no_julia_ftplugin = 1
let g:sandwich_no_plaintex_ftplugin = 1
let g:sandwich_no_tex_ftplugin = 1
'''

[[plugins]]
repo = 'voldikss/vim-translator'
hook_add = '''
let g:translator_target_lang = 'ja'
nmap <silent> <Leader>w <Plug>TranslateW
vmap <silent> <Leader>w <Plug>TranslateWV
'''

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'othree/html5.vim'

[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'

[[plugins]]
repo = 'neovimhaskell/haskell-vim'
hook_add = '''
let g:haskell_indent_disable = 1
'''

[[plugins]]
repo = 'itchyny/vim-haskell-indent'

[[plugins]]
repo = 'andys8/vim-elm-syntax'

[[plugins]]
repo = 'yuttie/comfortable-motion.vim'
hook_add = '''
let g:comfortable_motion_friction = 50.0
let g:comfortable_motion_air_drag = 5.0
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
set noshowmode

let g:lightline = {
  \  'colorscheme' : 'solarized',
  \  'active' : {
  \    'right' : [ ['lineinfo'],
  \                ['percent'],
  \                ['filetype'],
  \                ['eskkst']]
  \  },
  \  'component_function' : {
  \    'eskkst' : 'Eskk_statusline'
  \  }
  \}
function! Eskk_statusline() abort
    if get(g:, 'loaded_eskk') == 0
      return ''
    endif
    return eskk#is_enabled()
                \      ? printf('[%s]',
                \               get(g:eskk#statusline_mode_strings,
                \                   eskk#get_current_instance().mode, '??'))
                \      : ""
endfunction
'''
